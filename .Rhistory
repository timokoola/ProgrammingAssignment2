?
lm
library(datasets)
data(iris)
?iris
iris
colnames(iris)
mean(iris$Sepal.Length)
virginica <- subset(iris, Species == virginica)
virginica <- subset(iris, Species == "virginica")
mean(virginica$Sepal.Length)
colMeans(iris)
rowMeans(iris[, 1:4])
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
lapply(mtcars, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(mtcars, cyl, mean)
split(mtcars$mpg, mtcars$cyl)
colnames(mtcars)
mean(mtcars$mpg, mtcars$cyl)
?sapply
mpgpercyl <- sapply(split(mtcars$mpg, mtcars$cyl), mean)
mpgpercyl[[4]] - mpgpercyl[[8]]
colnames(mpgpercyl)
mpgpercyl
mpgpercyl[[1]]
mpgpercyl[[1]] - mpgpercyl[[3]]
?ls
?debug
colnames(mtcars)
hppercyl <- sapply(split(mtcars$mpg, mtcars$hp), mean)
hppercyl
hppercyl <- sapply(split(mtcars$cyl, mtcars$hp), mean)
hppercyl
hppercyl <- sapply(split(mtcars$hp, mtcars$cyl), mean)
hppercyl
hppercyl[[3]] - hppercyl[[1]]
debug(ls)
ls
ls()
sdsf
?
?
hek
install.packages("swirl")
library(swirl)
swirl()
5+7
x <- 5 + 7
x
y <- x -3
y
z <- c(1.1,9,3.14)
?c
<
z
c(z,555,z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
c
vact
vect
names(vect)
vect1 <- c(11,2,NA)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect1,vect2)
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags,class)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags,unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
swirl()
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4, replace=TRUE)
sample(1:6,4, replace=TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
sample(c(0,1),100,prb=c(0.3,0.7))
sample(c(0,1),100,prob=c(0.3,0.7))
sample(c(0,1),100,prob=c(0.3,0.7), replace=TRUE)
flips <- sample(c(0,1),100,prob=c(0.3,0.7), replace=TRUE)
flips
sum(flips)
?rbinom
rbinom(1,size=100,prob=0.7)
rbinom(100,size=1,prob=0.7)
flips2 <- rbinom(100,size=1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,mean=100,sd=25)
?rpois
rpois(5,c(10,10,10,10,10))
rpois(5,10)
?replicate
replicate(100, rpois(5,10))
my_pois <- replicate(100, rpois(5,10))
my_pois
colMeans()
colMeans(my_pois)
cm <- colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y=cars$dist)
plot(x=cars$dist, y=cars$speed )
plot(x = cars$speed, y=cars$dist, xlab="Speed")
plot(x = cars$speed, y=cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(x = cars$speed, y=cars$dist, ylab="Stopping Distance")
plot(x = cars$speed, y=cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(cars,main="My Plot")
plot(cars,sub="My Plot Subtitle")
?par
plot(cars,col="red")
plot(cars,col=1)
plot(cars,col=2)
plot(cars,xlim=c(10,15))
plot(cars,pch=2)
library(mtcars)
data(mtcars)
?boxplot
boxplot(mpg ~ cyl,data=mtcars)
hist(mtcars$mpg)
library("rjson")
fromJSON(file="http://10.157.5.107/trendchart/json/")
barba <- fromJSON(file="http://10.157.5.107/trendchart/json/")
rbind(barba)
nrow(barba)
barbaframe <- data.frame(barba)
summary(barbaframe)
x <- c(1:9)
x
matrix(x)
?matrix
matrix(x,nrow=3)
m <- matrix(x, nrow=3)
inverse(m)
solve(m)
x <- c(1:16)
m <- matrix(x, nrow=4)
solve(m)
x <- c(1,1,-2,0)
x <- c(1,1,-2,0)
m <- matrix(x, nrow=2)
m
solve(m)
m * solve(m)
m %*% solve(m)
setwd("/Users/timoeemelikoola/mycode/ProgrammingAssignment2
")
setwd("/Users/timoeemelikoola/mycode/ProgrammingAssignment2")
list.files()
